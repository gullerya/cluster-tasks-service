<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>cluster-tasks-service</artifactId>
	<groupId>com.gullerya</groupId>
	<version>3.0-SNAPSHOT</version>

	<name>Cluster Tasks Service (CTS)</name>
	<description>Tasks management, distribution and execution service, working in cluster aware fashion, providing
		queue-like functionality, embedded.
	</description>
	<url>https://github.com/gullerya/cluster-tasks-service</url>

	<licenses>
		<license>
			<name>The Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>gullery</id>
			<name>Yuri Guller</name>
			<email>gullerya@gmail.com</email>
			<organization>GullerYA</organization>
			<roles>
				<role>Maintainer</role>
			</roles>
		</developer>
	</developers>

	<scm>
		<url>https://github.com/gullerya/cluster-tasks-service</url>
	</scm>

	<properties>

		<slf4j.version>1.7.26</slf4j.version>
		<spring.version>5.1.6.RELEASE</spring.version>
		<flyway.version>4.2.0</flyway.version>
		<prometheus.version>0.6.0</prometheus.version>

		<!--BUILD-->
		<jdk.version>1.8</jdk.version>
		<maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
		<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-jar-plugin.version>3.1.2</maven-jar-plugin.version>
		<maven-source-plugin.version>3.1.0</maven-source-plugin.version>
		<maven-javadoc-plugin.version>3.1.0</maven-javadoc-plugin.version>
		<maven-install-plugin.version>3.0.0-M1</maven-install-plugin.version>

		<!--DEPLOY-->
		<nexus-url>https://oss.sonatype.org</nexus-url>
		<maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
		<nexus-staging-maven-plugin.version>1.6.8</nexus-staging-maven-plugin.version>

		<!--QUALITY-->
		<skipTests>true</skipTests>
		<junit.version>4.12</junit.version>
		<maven-surefire-plugin.version>3.0.0-M3</maven-surefire-plugin.version>
		<jacoco-maven-plugin.version>0.8.4</jacoco-maven-plugin.version>
		<spotbugs.version>3.1.11</spotbugs.version>
		<sql-maven-plugin.version>1.5</sql-maven-plugin.version>
		<mssql-jdbc.version>7.2.2.jre8</mssql-jdbc.version>
		<ojdbc.version>11.2.0.3</ojdbc.version>
		<postgresql.version>42.2.5</postgresql.version>
		<hikari.version>3.3.1</hikari.version>
		<log4j.version>2.11.2</log4j.version>

		<tests.db.schema>cts_tests_schema</tests.db.schema>
		<tests.db.driver>TO_BE_REPLACED_DYNAMICALLY_BY_PROFILE</tests.db.driver>
		<tests.db.url>TO_BE_REPLACED_DYNAMICALLY_BY_CONFIG</tests.db.url>
		<tests.db.username>TO_BE_REPLACED_DYNAMICALLY_BY_PROFILE</tests.db.username>
		<tests.db.password>TO_BE_REPLACED_DYNAMICALLY_BY_PROFILE</tests.db.password>
		<tests.db.drop.script>TO_BE_REPLACED_DYNAMICALLY_BY_PROFILE</tests.db.drop.script>
		<tests.db.create.script>TO_BE_REPLACED_DYNAMICALLY_BY_PROFILE</tests.db.create.script>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<artifactId>slf4j-api</artifactId>
				<groupId>org.slf4j</groupId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<artifactId>spring-jdbc</artifactId>
				<groupId>org.springframework</groupId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<artifactId>flyway-core</artifactId>
				<groupId>org.flywaydb</groupId>
				<version>${flyway.version}</version>
			</dependency>
			<dependency>
				<artifactId>simpleclient</artifactId>
				<groupId>io.prometheus</groupId>
				<version>${prometheus.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<artifactId>slf4j-api</artifactId>
			<groupId>org.slf4j</groupId>
		</dependency>
		<dependency>
			<artifactId>spring-jdbc</artifactId>
			<groupId>org.springframework</groupId>
		</dependency>
		<dependency>
			<artifactId>flyway-core</artifactId>
			<groupId>org.flywaydb</groupId>
		</dependency>
		<dependency>
			<artifactId>simpleclient</artifactId>
			<groupId>io.prometheus</groupId>
		</dependency>

		<!--TESTS-->
		<dependency>
			<artifactId>log4j-slf4j-impl</artifactId>
			<groupId>org.apache.logging.log4j</groupId>
			<version>${log4j.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<artifactId>HikariCP</artifactId>
			<groupId>com.zaxxer</groupId>
			<version>${hikari.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<artifactId>mssql-jdbc</artifactId>
			<groupId>com.microsoft.sqlserver</groupId>
			<version>${mssql-jdbc.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<artifactId>postgresql</artifactId>
			<groupId>org.postgresql</groupId>
			<version>${postgresql.version}</version>
			<scope>test</scope>
		</dependency>
		<!--<dependency>-->
		<!--<artifactId>ojdbc</artifactId>-->
		<!--<groupId>com.oracle.jdbc</groupId>-->
		<!--<version>${ojdbc.version}</version>-->
		<!--<scope>test</scope>-->
		<!--</dependency>-->
		<dependency>
			<artifactId>spring-context</artifactId>
			<groupId>org.springframework</groupId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<artifactId>spring-test</artifactId>
			<groupId>org.springframework</groupId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<artifactId>junit</artifactId>
			<groupId>junit</groupId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>${nexus-url}/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>${nexus-url}/service/local/staging/deploy/maven2</url>
		</repository>
	</distributionManagement>

	<build>
		<pluginManagement>
			<plugins>
				<!--BUILD-->
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<groupId>org.apache.maven.plugins</groupId>
					<version>${maven-clean-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<groupId>org.apache.maven.plugins</groupId>
					<version>${maven-resources-plugin.version}</version>
					<configuration>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<groupId>org.apache.maven.plugins</groupId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${jdk.version}</source>
						<target>${jdk.version}</target>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<groupId>org.apache.maven.plugins</groupId>
					<version>${maven-jar-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<groupId>org.apache.maven.plugins</groupId>
					<version>${maven-install-plugin.version}</version>
				</plugin>

				<!--TESTS-->
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<groupId>org.apache.maven.plugins</groupId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<skipTests>${skipTests}</skipTests>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>jacoco-maven-plugin</artifactId>
					<groupId>org.jacoco</groupId>
					<version>${jacoco-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>sql-maven-plugin</artifactId>
					<groupId>org.codehaus.mojo</groupId>
					<version>${sql-maven-plugin.version}</version>
					<configuration>
						<driver>${tests.db.driver}</driver>
						<url>${tests.db.url}</url>
						<username>${tests.db.username}</username>
						<password>${tests.db.password}</password>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>spotbugs-maven-plugin</artifactId>
					<groupId>com.github.spotbugs</groupId>
					<version>${spotbugs.version}</version>
					<configuration>
						<effort>max</effort>
						<maxRank>20</maxRank>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<artifactId>spotbugs</artifactId>
							<groupId>com.github.spotbugs</groupId>
							<version>${spotbugs.version}</version>
						</dependency>
					</dependencies>
				</plugin>

				<!--DEPLOY-->
				<plugin>
					<artifactId>maven-source-plugin</artifactId>
					<groupId>org.apache.maven.plugins</groupId>
					<version>${maven-source-plugin.version}</version>
					<configuration>
						<excludeResources>true</excludeResources>
					</configuration>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-javadoc-plugin</artifactId>
					<groupId>org.apache.maven.plugins</groupId>
					<version>${maven-javadoc-plugin.version}</version>
					<configuration>
						<encoding>UTF-8</encoding>
						<excludePackageNames>com.gullerya.cluster.tasks.impl</excludePackageNames>
					</configuration>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-gpg-plugin</artifactId>
					<groupId>org.apache.maven.plugins</groupId>
					<version>${maven-gpg-plugin.version}</version>
					<configuration>
						<keyname>gullerya@gmail.com</keyname>
					</configuration>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<phase>verify</phase>
							<goals>
								<goal>sign</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<groupId>org.sonatype.plugins</groupId>
					<version>${nexus-staging-maven-plugin.version}</version>
					<extensions>true</extensions>
					<configuration>
						<serverId>ossrh</serverId>
						<nexusUrl>${nexus-url}</nexusUrl>
						<autoReleaseAfterClose>false</autoReleaseAfterClose>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>sqlserver</id>
			<properties>
				<tests.db.driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</tests.db.driver>
				<tests.db.url>jdbc:sqlserver://localhost:1433</tests.db.url>
				<tests.db.username>sa</tests.db.username>
				<tests.db.password>Mercurypw123</tests.db.password>
				<tests.db.drop.script>DROP DATABASE ${tests.db.schema}</tests.db.drop.script>
				<tests.db.create.script>CREATE DATABASE ${tests.db.schema}</tests.db.create.script>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>sql-maven-plugin</artifactId>
						<groupId>org.codehaus.mojo</groupId>
						<version>${sql-maven-plugin.version}</version>
						<dependencies>
							<dependency>
								<artifactId>mssql-jdbc</artifactId>
								<groupId>com.microsoft.sqlserver</groupId>
								<version>${mssql-jdbc.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>oracle</id>
			<properties>
				<tests.db.driver>oracle.jdbc.OracleDriver</tests.db.driver>
				<tests.db.url>jdbc:oracle:thin:@GULLERY3:1521/xe</tests.db.url>
				<tests.db.username>system</tests.db.username>
				<tests.db.password>system_password</tests.db.password>
				<tests.db.drop.script>
					DROP USER ${tests.db.schema} CASCADE;
					DROP TABLESPACE ${tests.db.schema} INCLUDING CONTENTS AND DATAFILES;
					DROP TABLESPACE ${tests.db.schema}_tmp INCLUDING CONTENTS AND DATAFILES;
				</tests.db.drop.script>
				<tests.db.create.script>
					CREATE TABLESPACE ${tests.db.schema}
					DATAFILE '${tests.db.schema}.dat' SIZE 5M AUTOEXTEND ON NEXT 1M
					NOLOGGING
					EXTENT MANAGEMENT LOCAL UNIFORM SIZE 1M
					SEGMENT SPACE MANAGEMENT AUTO;

					CREATE TEMPORARY TABLESPACE ${tests.db.schema}_tmp
					TEMPFILE '${tests.db.schema}.tmp' SIZE 5M AUTOEXTEND ON NEXT 1M;

					CREATE USER ${tests.db.schema} IDENTIFIED BY ${tests.db.schema}
					DEFAULT TABLESPACE ${tests.db.schema} TEMPORARY TABLESPACE ${tests.db.schema}_tmp;
					GRANT CONNECT, RESOURCE, DBA TO ${tests.db.schema};
					GRANT CREATE SESSION TO ${tests.db.schema};
					GRANT UNLIMITED TABLESPACE TO ${tests.db.schema};
				</tests.db.create.script>
			</properties>
			<dependencies>
				<dependency>
					<artifactId>ojdbc</artifactId>
					<groupId>com.oracle.jdbc</groupId>
					<version>${ojdbc.version}</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<artifactId>sql-maven-plugin</artifactId>
						<groupId>org.codehaus.mojo</groupId>
						<version>${sql-maven-plugin.version}</version>
						<dependencies>
							<dependency>
								<artifactId>ojdbc</artifactId>
								<groupId>com.oracle.jdbc</groupId>
								<version>${ojdbc.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>postgresql</id>
			<properties>
				<tests.db.driver>org.postgresql.Driver</tests.db.driver>
				<tests.db.url>jdbc:postgresql://localhost:5432/postgres</tests.db.url>
				<tests.db.username>postgres</tests.db.username>
				<tests.db.password>postgres</tests.db.password>
				<tests.db.drop.script>DROP DATABASE ${tests.db.schema}</tests.db.drop.script>
				<tests.db.create.script>CREATE DATABASE ${tests.db.schema}</tests.db.create.script>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>sql-maven-plugin</artifactId>
						<groupId>org.codehaus.mojo</groupId>
						<version>${sql-maven-plugin.version}</version>
						<dependencies>
							<dependency>
								<artifactId>postgresql</artifactId>
								<groupId>org.postgresql</groupId>
								<version>${postgresql.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>create-tests-schema</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>sql-maven-plugin</artifactId>
						<groupId>org.codehaus.mojo</groupId>
						<executions>
							<execution>
								<id>drop-db-before-test-if-any</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<autocommit>true</autocommit>
									<sqlCommand>${tests.db.drop.script}</sqlCommand>
									<onError>continue</onError>
								</configuration>
							</execution>
							<execution>
								<id>create-db</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<autocommit>true</autocommit>
									<sqlCommand>${tests.db.create.script}</sqlCommand>
									<onError>abort</onError>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>drop-tests-schema</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>sql-maven-plugin</artifactId>
						<groupId>org.codehaus.mojo</groupId>
						<executions>
							<execution>
								<id>drop-db</id>
								<phase>test</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<autocommit>true</autocommit>
									<sqlCommand>${tests.db.drop.script}</sqlCommand>
									<onError>continue</onError>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jacoco-coverage</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>jacoco-maven-plugin</artifactId>
						<groupId>org.jacoco</groupId>
						<executions>
							<execution>
								<id>prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>report</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
							<execution>
								<id>post-unit-test</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<dataFile>target/jacoco.exec</dataFile>
									<outputDirectory>target/jacoco-report</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>deploy</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-source-plugin</artifactId>
						<groupId>org.apache.maven.plugins</groupId>
					</plugin>
					<plugin>
						<artifactId>maven-javadoc-plugin</artifactId>
						<groupId>org.apache.maven.plugins</groupId>
					</plugin>
					<plugin>
						<artifactId>maven-gpg-plugin</artifactId>
						<groupId>org.apache.maven.plugins</groupId>
					</plugin>
					<plugin>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<groupId>org.sonatype.plugins</groupId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
